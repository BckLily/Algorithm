List
Queue나 Stack과 달리, 데이터를 넣을 때
기존 데이터의 중간에 넣는 것이 가능한 자료구조.
(기존 데이터와 동떨어진 위치에 넣는 것은 불가능하지만
기존 데이터들 사이에 새로운 데이터를 삽입, 삭제하는 것이 가능하다.)


1. 선형 List
push
front
back
insert
remove

자료 구조를 배열로 구현했을 때의 문제점
	1. 데이터를 꺼내거나 넣을 때 나머지 데이터를 모두 옮겨야 한다.
	2. 실제로 저장된 데이터가 사라지지 않는다. (변수 값을 사용해서 사용하지 않는 것임)
	3. 배열 크기만큼의 메모리 공간을 할당받기 때문에 사용하지 않는 메모리도 차지하게 된다.
	4. 배열이기 때문에 배열을 만들 때 지정한 갯수만큼만 저장할 수 있다.

	배열형 자료구조의 문제를 개선한 구조가 Linked List.
	구조가 복잡하다는 단점.


2. 연결(링크드) 리스트
저장하는 데이터를 하나의 덩어리로 연결함. (Node)

각각의 칸은 자신의 값과 다음 칸의 주소 값을 가지고 있다.




